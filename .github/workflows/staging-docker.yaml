name: Staging

on:
    push:
        tags:
            - docker-*
    workflow_dispatch:

env:
    SSH_KEY_FILE_NAME: portfolio.pem
    # APP_TAG: portfolio-staging
    APP_DIR: staging/portfolio
    COMPOSE_FILE: docker-compose.staging.yaml
    APP_IMAGE: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DOCKERHUB_REPOSITORY }}:portfolio-staging

jobs:
    build_and_deploy:
        runs-on: ubuntu-20.04
        steps:
            - name: Checkout repository
              uses: actions/checkout@v3
            - name: Set up Node.js
              uses: actions/setup-node@v2
              with:
                  node-version: "20"
            - name: Store SSH key
              run: echo "${{ secrets.STAGING_SSH_KEY }}" > ${{ env.SSH_KEY_FILE_NAME }}
            - name: Change SSH key permission
              run: chmod 444 ${{ env.SSH_KEY_FILE_NAME }}

            - name: Copy file to server
              uses: appleboy/scp-action@master
              with:
                host: ${{ secrets.STAGING_SERVER_IP }}
                username: ${{ secrets.STAGING_SSH_USERNAME }}
                port: ${{ secrets.STAGING_SSH_PORT }}
                key_path: ${{ env.SSH_KEY_FILE_NAME }}
                source: "./${{env.COMPOSE_FILE}},./docker"
                target: "/home/${{ secrets.STAGING_SSH_USERNAME }}/${{ env.APP_DIR }}"

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  username: ${{ secrets.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}
            - name: Docker build & push
              run: |
                docker build -t ${{env.APP_IMAGE}} .
                docker push ${{env.APP_IMAGE}}

            - name: Executing remote command using ssh
              uses: appleboy/ssh-action@master
              with:
                  host: ${{ secrets.STAGING_SERVER_IP }}
                  username: ${{ secrets.STAGING_SSH_USERNAME }}
                  key_path: ${{ env.SSH_KEY_FILE_NAME }}
                  port: ${{ secrets.STAGING_SSH_PORT }}
                  script: |
                      cd /home/${{ secrets.STAGING_SSH_USERNAME }}/${{ env.APP_DIR }}
                      mkdir -p nginx ssl
                      echo "${{ secrets.STAGING_ENV_VARS }}" > .env
                      echo "${{ vars.STAGING_NGINX_CONFIG }}" > nginx/default.conf
                      echo "${{ secrets.STAGING_SSL_KEY }}" > ssl/ssl.key
                      echo "${{ secrets.STAGING_SSL_CERT }}" > ssl/ssl.cert
                      cp ./${{env.COMPOSE_FILE}} ./docker-compose.yaml
                      APP_IMAGE=${{env.APP_IMAGE}} COMPOSE_BAKE=true docker-compose down
                      echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login docker.io -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
                      docker pull ${{env.APP_IMAGE}}
                      APP_IMAGE=${{env.APP_IMAGE}} COMPOSE_BAKE=true docker-compose up -d --force-recreate
                      docker logout docker.io